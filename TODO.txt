Compléter les ZoneCallbacks

Encapsulation d'un élément d'UI/un Widget :
- Button (+Text)
- Label/Text
- List ?
Encapsulation d'un élément de Menu

Utiliser boost/intrusive à la place des std::list dans certains cas ? Plus efficace :
+ en terme d'utilisation mémoire,
+ dès lors qu'il s'agit de délier un membre de la liste, plus efficace en mémoire
- Mais non copiables (à ne pas utiliser pour lister les Sprites d'une Animation par exemple)
=> pour le ResourcesManager ? pour la hierarchie de Zones ?
http://www.boost.org/doc/libs/1_51_0/doc/html/intrusive/intrusive_vs_nontrusive.html

Décider où gérer le chaînage des Zone : dans les Factory ? Dans les constructeurs d'Entity et d'UI ?

Ajouter une chaîne nommant chaque Image (son nom de fichier), chaque Sprite, chaque Animation
Créer une Zone à utiliser pour détection de clic :
- Cette Zone ne serait qu'une interface, une propriété à ajouter à une Entity/Menu ?
- Donc non nommée
Créer un gestionnaire de Zones : voir sa relation éventuelle avec le gestionnaire de ressources
Une infobulle ne serait pas une Zone (non cliquable)
Une popup/un menu serait une Zone "modale" en surimpression : donc prioritaire, à traiter avant le reste, voir même en exclusivité ! 
Une Zone peut être enfant d'une autre Zone (un objet sur un terrain) : alors non enregistrée dans le gestionnaire, seulement dans son parent
Deux Zones peuvent se superposer (deux monstres se croisant) 

Encapsulation du temps, des additions ou des deltas de temps

Créer des Factory
Créer un ResourcesManager
Charger dynamiquement toutes les ressources graphiques
- les entités du jeux
- les éléments d'UI
- les menus

Ajouter des algorithmes de mouvements dans Position 
Distinguer un Objet animé mais ne se déplaçant pas, d'une Entité mouvante 
Fonction de mirroring d'un sprite

Compléter le fichier de suppressions valgrind
